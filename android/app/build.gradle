apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'dagger.hilt.android.plugin'

// apply from: "../keystore.gradle"

android {

    compileSdkVersion = compile_sdk_version
    buildToolsVersion = build_tools_version

    defaultConfig {
        applicationId "com.tmjee.myathena"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental": "true",
                        "room.expandProjection": "true"
                ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField ("String", "build_time", "\"0\"")
            resValue ("string", "build_time", "0")

            // signingConfig signingConfigs.release
        }
        debug {
            buildConfigField ("String", "build_time", "\"1\"")
            resValue ("string", "build_time", "1")
        }
    }

    // kapt {
    //     arguments {
    //         arg("room.schemaLocation": "${projectDir}/schemas")
    //         arg("room.incremental", "true")
    //         arg("room.expandProjection", "true")
    //     }
    // }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    compileOptions {
        sourceCompatibility = source_compatibility
        targetCompatibility = target_compatibility
    }

    kotlinOptions {
        jvmTarget = kotlin_jvm_target

        // enable coroutines and flow apis
        // freeCompilerArgs += "-xopt-in=kotlinx.coroutines.experimentalcoroutinesapi"
        // freeCompilerArgs += "-xopt-in=kotlinx.coroutines.flowpreview"
    }
}

dependencies {
    // android fundamentals
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    implementation "androidx.legacy:legacy-support-v4:${androidx_legacy_support_v4_version}"
    androidTestImplementation "androidx.test.ext:junit:${androidx_test_ext_junit_version}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${androidx_test_expresso_core_version}"
    testImplementation "junit:junit:${junit_version}"

    // multidex
    implementation "androidx.multidex:multidex:${multidex_version}"

    // core
    implementation "androidx.core:core-ktx:${core_version}"
    implementation "androidx.core:core-role:${core_role_version}"
    implementation "androidx.core:core-animation:${core_animation_version}"
    androidTestImplementation "androidx.core:core-animation-testing:${core_animation_version}"

    // collection
    implementation "androidx.collection:collection-ktx:${collection_version}"

    // app-compat
    implementation "androidx.appcompat:appcompat:${appcompat_version}"
    implementation "androidx.appcompat:appcompat-resources:${appcompat_version}"

    // constraint layout
    implementation "androidx.constraintlayout:constraintlayout:${constraintlayout_version}"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-service:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-process:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:${lifecycle_version}"
    kapt "androidx.lifecycle:lifecycle-compiler:${lifecycle_version}"
    testImplementation "androidx.arch.core:core-testing:${arch_version}"

    // card view
    implementation "androidx.cardview:cardview:${cardview_version}"

    // palette
    implementation "androidx.palette:palette-ktx:${palette_version}"

    // sql-lite
    implementation "androidx.sqlite:sqlite-ktx:${sqlite_version}"
    implementation "androidx.sqlite:sqlite-framework:${sqlite_version}"

    // fragment
    implementation "androidx.fragment:fragment-ktx:${fragment_version}"
    debugImplementation "androidx.fragment:fragment-testing:${fragment_version}"

    // activity
    implementation "androidx.activity:activity-ktx:${activity_version}"

    // futures
    implementation "androidx.concurrent:concurrent-futures-ktx:${futures_version}"

    // navigation
    implementation "androidx.navigation:navigation-ui:${nav_version}"
    implementation "androidx.navigation:navigation-fragment-ktx:${nav_version}"
    implementation "androidx.navigation:navigation-ui-ktx:${nav_version}"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:${nav_version}"
    androidTestImplementation "androidx.navigation:navigation-testing:${nav_version}"

    // Paging v3
    implementation "androidx.paging:paging-runtime:${paging_version}" // For Kotlin use paging-runtime-ktx
    testImplementation "androidx.paging:paging-common:${paging_version}" // For Kotlin use paging-common-ktx
    implementation "androidx.paging:paging-rxjava2:${paging_version}" // For Kotlin use paging-rxjava2-ktx
    implementation "androidx.paging:paging-guava:${paging_version}"   // For Kotlin Guava ListenableFuture support

    // viewpager2
    implementation "androidx.viewpager2:viewpager2:${viewpager_version}"

    // Room persistence
    implementation "androidx.room:room-runtime:${room_version}"
    kapt "androidx.room:room-compiler:${room_version}"
    implementation "androidx.room:room-ktx:${room_version}"
    testImplementation "androidx.room:room-testing:${room_version}"

    // workmanager
    implementation "androidx.work:work-runtime-ktx:${workmanager_version}"
    implementation "androidx.work:work-rxjava2:${workmanager_version}"
    implementation "androidx.work:work-gcm:${workmanager_version}"
    androidTestImplementation "androidx.work:work-testing:${workmanager_version}"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:${moshi_version}"
    implementation "com.squareup.moshi:moshi-adapters:${moshi_version}"

    // okhttp3
    implementation "com.squareup.okhttp3:okhttp:${okhttp3_version}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttp3_version}"

    // Retrofit & Converters
    implementation "com.squareup.retrofit2:retrofit:${retrofit_version}"
    implementation "com.squareup.retrofit2:converter-moshi:${retrofit_version}"

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:${recyclerview_version}"

    // Material design
    implementation "com.google.android.material:material:${materialdesign_version}"

    // coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutines_version}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutines_version}"

    // hilt & dependencies
    implementation "com.google.dagger:hilt-android:${hilt_version}"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:${hilt_ext_version}"
    implementation "androidx.hilt:hilt-work:${hilt_ext_version}"
    kapt "com.google.dagger:hilt-android-compiler:${hilt_version}"
    kapt "androidx.hilt:hilt-compiler:${hilt_ext_version}"
    kapt "androidx.hilt:hilt-compiler:${hilt_ext_version}"

    // coordinator layout
    implementation "androidx.coordinatorlayout:coordinatorlayout:${coordinatorlayout_version}"

    // picasso
    implementation "com.squareup.picasso:picasso:${picasso_version}"

    // volley
    implementation "com.android.volley:volley:${volley_version}"

    // preferences
    implementation "androidx.preference:preference-ktx:${preference_version}"
}
